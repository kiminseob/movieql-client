{"version":3,"sources":["apolloClient.js","queries.js","Movie.js","Home.js","Detail.js","App.js","globalStyles.js","index.js"],"names":["client","ApolloClient","uri","HOME_PAGE","gql","MOIVE_DETAILS","Card","styled","div","props","background","Title","span","Movie","id","title","rating","poster","to","Container","Home","useQuery","data","error","loading","Helmet","movies","map","movie","key","medium_cover_image","Image","withComponent","h1","Paragraph","bold","MovieContainer","Detail","movieId","match","params","parseInt","variables","console","log","Fragment","src","description_intro","suggestions","App","exact","path","component","Component","createGlobalStyle","reset","ReactDOM","render","document","getElementById"],"mappings":"8PAMeA,EAJA,I,MAAIC,GAAa,CAC5BC,IAAK,gC,wuBCDF,IAAMC,EAAYC,IAAH,KAYTC,EAAgBD,IAAH,K,koBCT1B,IAAME,EAAOC,UAAOC,IAAV,KAGY,SAAAC,GAAK,oBAAWA,EAAMC,WAAjB,QASrBC,EAAQJ,UAAOK,KAAV,KA6BIC,EAjBD,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,OAAQC,EAAtB,EAAsBA,OAAtB,OACZ,kBAAC,IAAD,CAAMC,GAAE,mBAAcJ,IACpB,kBAACR,EAAD,CAAMI,WAAYO,GAChB,kBAACN,EAAD,KACGI,EADH,MACaC,EADb,mB,mMCvBN,IAAMG,EAAYZ,UAAOC,IAAV,KAgCAY,EAzBF,WAAO,IAAD,EACkBC,YAASlB,GAAlCmB,EADO,EACPA,KAAMC,EADC,EACDA,MAAOC,EADN,EACMA,QACrB,OACI,kBAACL,EAAD,KACI,kBAACM,EAAA,EAAD,KACI,mDAEHD,GAAW,UACXD,GAAS,sBACRC,GACEF,GACAA,EAAKI,QACLJ,EAAKI,OAAOC,KAAI,SAAAC,GAAK,OACjB,kBAAC,EAAD,CACId,GAAIc,EAAMd,GACVe,IAAKD,EAAMd,GACXG,OAAQW,EAAME,mBACdf,MAAOa,EAAMb,MACbC,OAAQY,EAAMZ,c,+xBC3BtC,IAAMG,EAAYZ,UAAOC,IAAV,KAYTuB,EANOxB,UAAOC,IAAV,KAMSwB,cAAc,OAE3BrB,EAAQJ,UAAO0B,GAAV,KAKLC,EAAY3B,UAAOK,KAAV,KAGE,SAAAH,GAAK,OAAKA,EAAM0B,KAAO,MAAQ,SAG1CC,EAAiB7B,UAAOC,IAAV,KAwDL6B,EAhDA,SAAC,GAIT,IAFWC,EAEZ,EAHFC,MACIC,OAAUF,QAGdA,EAAUG,SAASH,GADjB,MAE+BjB,YAAShB,EAAe,CACrDqC,UAAW,CAAEJ,aADTd,EAFN,EAEMA,QAASF,EAFf,EAEeA,KAAMC,EAFrB,EAEqBA,MAIvB,OADAoB,QAAQC,IAAItB,GACRE,EAEI,kBAAC,IAAMqB,SAAP,KACI,kBAACpB,EAAA,EAAD,KACI,qDAFR,WAOJF,EAAc,QAEd,kBAAC,IAAMsB,SAAP,KACI,kBAAC,EAAD,KACI,kBAACpB,EAAA,EAAD,KACI,+BAAQH,EAAKM,MAAMb,MAAnB,eAEJ,kBAACgB,EAAD,CAAOe,IAAKxB,EAAKM,MAAME,qBACvB,8BACI,kBAAC,EAAD,KAAQR,EAAKM,MAAMb,OACnB,kBAACmB,EAAD,CAAWC,MAAI,GAAf,WAAyBb,EAAKM,MAAMZ,QACpC,kBAACkB,EAAD,KAAYZ,EAAKM,MAAMmB,qBAG/B,kBAAC,EAAD,kBACA,kBAACX,EAAD,KACKd,EAAK0B,YAAYrB,KAAI,SAAAC,GAAK,OACvB,kBAAC,EAAD,CACIC,IAAKD,EAAMd,GACXA,GAAIc,EAAMd,GACVC,MAAOa,EAAMb,MACbC,OAAQY,EAAMZ,OACdC,OAAQW,EAAME,2BC3DvBmB,E,uKAbX,OACE,kBAAC,IAAD,CAAgBjD,OAAQA,GACtB,kBAAC,IAAD,KAEI,kBAAC,IAAD,CAAOkD,OAAO,EAAMC,KAAM,IAAKC,UAAWhC,IAC1C,kBAAC,IAAD,CAAO+B,KAAM,oBAAqBC,UAAWf,U,GAPvCgB,a,gXCLlBC,4BAAiB,IAEbC,KCCJC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.6eef67a3.chunk.js","sourcesContent":["import ApolloClient from 'apollo-boost';\n\nconst client = new ApolloClient({\n    uri: 'https://movie.inseop.pe.kr/'\n});\n\nexport default client;","import gql from 'graphql-tag';\n\nexport const HOME_PAGE = gql`\n    query{\n        movies(limit:50, rating: 7){\n            id\n            title\n            genres\n            rating\n            medium_cover_image\n        }\n    }\n`\n\nexport const MOIVE_DETAILS = gql`\n    query getMovieDetails($movieId: Int!){\n        movie(id: $movieId){\n            id\n            medium_cover_image\n            title\n            rating\n            description_intro\n            language\n            genres\n        }\n        suggestions(id: $movieId){\n            id\n            medium_cover_image\n            title\n            rating\n        }\n    }\n`\n\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Card = styled.div`\n  border-radius: 15px;\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n  background-image: ${props => `url(${props.background})`};\n  background-size: cover;\n  background-position: center center;\n  height: 300px;\n  width: 200px;\n  margin-bottom: 40px;\n  position: relative;\n`;\n\nconst Title = styled.span`\n  background-color: white;\n  width: auto;\n  padding: 10px;\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n  position: absolute;\n  bottom: 25px;\n  left: 0;\n  right: 0;\n  margin: auto;\n`;\n\nconst Movie = ({ id, title, rating, poster }) => (\n  <Link to={`/details/${id}`}>\n    <Card background={poster}>\n      <Title>\n        {title} / {rating}⭐️\n      </Title>\n    </Card>\n  </Link>\n);\n\nMovie.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number.isRequired,\n  poster: PropTypes.string.isRequired\n};\n\nexport default Movie;","import React from 'react';\nimport styled from 'styled-components';\nimport { Helmet } from 'react-helmet';\nimport { HOME_PAGE } from './queries';\nimport Movie from './Movie';\nimport { useQuery } from '@apollo/react-hooks';\n\n\n\nconst Container = styled.div`\n    display: grid;\n    grid-template-columns: repeat(3, 0.7fr);\n    flex-wrap: wrap;\n    justify-items: center;\n`;\n\nconst Home = () => {\n    const { data, error, loading } = useQuery(HOME_PAGE);\n    return (\n        <Container>\n            <Helmet>\n                <title> Home | MovieQL</title>\n            </Helmet>\n            {loading && 'Loading'}\n            {error && 'Something is wrong'}\n            {!loading &&\n                data &&\n                data.movies &&\n                data.movies.map(movie => (\n                    <Movie\n                        id={movie.id}\n                        key={movie.id}\n                        poster={movie.medium_cover_image}\n                        title={movie.title}\n                        rating={movie.rating}\n                    />\n                ))}\n        </Container>\n    )\n};\n\nexport default Home;","import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { MOIVE_DETAILS } from './queries';\nimport { Helmet } from 'react-helmet';\nimport Movie from './Movie';\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 4fr;\n  margin-bottom: 50px;\n`;\n\nconst Card = styled.div`\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n  background-color: white;\n  border-radius: 7px;\n`;\n\nconst Image = Card.withComponent(\"img\");\n\nconst Title = styled.h1`\n  font-size: 24px;\n  margin-bottom: 10px;\n`;\n\nconst Paragraph = styled.span`\n  margin-bottom: 10px;\n  display: block;\n  font-weight: ${props => (props.bold ? \"500\" : \"400\")};\n`;\n\nconst MovieContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 0.7fr);\n  flex-wrap: wrap;\n  justify-items: center;\n  margin-top: 50px;\n`;\n\nconst Detail = ({\n    match: {\n        params: { movieId }\n    }\n}) => {\n    movieId = parseInt(movieId);\n    const { loading, data, error } = useQuery(MOIVE_DETAILS, {\n        variables: { movieId }\n    });\n    console.log(data)\n    if (loading)\n        return (\n            <React.Fragment>\n                <Helmet>\n                    <title>Loading | MovieQL</title>\n                </Helmet>\n        loading\n            </React.Fragment>\n        );\n    if (error) return \"error\";\n    return (\n        <React.Fragment>\n            <Container>\n                <Helmet>\n                    <title>{data.movie.title} | MovieQL</title>\n                </Helmet>\n                <Image src={data.movie.medium_cover_image} />\n                <span>\n                    <Title>{data.movie.title}</Title>\n                    <Paragraph bold>Rating: {data.movie.rating}</Paragraph>\n                    <Paragraph>{data.movie.description_intro}</Paragraph>\n                </span>\n            </Container>\n            <Title>Suggested</Title>\n            <MovieContainer>\n                {data.suggestions.map(movie => (\n                    <Movie\n                        key={movie.id}\n                        id={movie.id}\n                        title={movie.title}\n                        rating={movie.rating}\n                        poster={movie.medium_cover_image}\n                    />\n                ))}\n            </MovieContainer>\n        </React.Fragment>\n    )\n}\nexport default Detail;","import React, { Component } from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport { ApolloProvider } from '@apollo/react-hooks'\nimport client from './apolloClient';\nimport Home from './Home';\nimport Detail from './Detail';\n\nclass App extends Component {\n  render() {\n    return (\n      <ApolloProvider client={client}>\n        <Router>\n          {/* <React.Fragment> */}\n            <Route exact={true} path={\"/\"} component={Home} />\n            <Route path={\"/details/:movieId\"} component={Detail} />\n          {/* </React.Fragment> */}\n        </Router>\n      </ApolloProvider>\n    );\n  }\n}\n\nexport default App;\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\ncreateGlobalStyle`\n  @import url('https://fonts.googleapis.com/css?family=Maven+Pro:400,500');\n  ${reset};\n  body{\n    font-family: 'Maven Pro', sans-serif;\n    background-color: #ecf0f1;\n  }\n  a{\n      color:inherit;\n  }\n  main {\n    width: 80%;\n    margin: 0 auto;\n    padding: 20px;\n  }\n`;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './globalStyles';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}